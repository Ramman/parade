{"name":"Parade","tagline":"parade is a cluster manager and also a process monitor for node.js applications","body":"# parade\r\n\r\nparade is a cluster manager and also a process monitor for node.js applications.\r\nIt forks multiple processes based on the number of cores available in the CPU\r\nand provides restful endpoints that provide data to track status, memory and cpu for individual node processes and servers.\r\n\r\n[![NPM Version](https://badge.fury.io/js/parade.svg)](https://badge.fury.io/for/js/parade)\r\n[![Build Status](https://travis-ci.org/Ancestry/parade.svg?branch=master)](https://travis-ci.org/Ancestry/parade)\r\n\r\n## Contributors\r\n* Author: Prasanna Ramanujam <pramanujam@ancestry.com>\r\n\r\n## Installation\r\n```bash\r\n$ npm install -g parade\r\n```\r\n## Start the app\r\n\r\n```bash\r\n$ parade <app.js> [clusters]\r\n```\r\n### Arguments\r\n\r\n* app.js: the main js file of your application\r\n* clusters (optional): # of clusters to fork. By default, it is set to (# of cores - 1)\r\n\r\n### Examples\r\n\r\n#### To run your app\r\n```bash\r\n$ parade app.js\r\n$ parade app.js 3\r\n```\r\n#### To run the example in this module\r\n```bash\r\n$ parade ./example/app.js\r\n```\r\n```bash\r\n$ parade ./example/app.js 3\r\n\r\nArgument 3, worker file name: ./example/app.js\r\nNumber of process forks  : 3\r\nparade web api server running in 5667\r\nWorker is online, Worker ID :  1\r\nWorker is online, Worker ID :  2\r\nWorker is online, Worker ID :  3\r\n```\r\n\r\n## Tests\r\n```bash\r\n$ npm install\r\n$ npm test\r\n```\r\n## Rest Endpoints\r\nStart the app with parade and test the following rest end points\r\n```bash\r\n$ parade app.js\r\n```\r\n\r\n### Stats\r\nIt gets metrics of all worker processes\r\n\r\n[http://localhost:5667/stats](http://localhost:5667/stats)\r\n\r\n#### Sample result\r\n```js\r\n{\r\n  \"processStats\": [\r\n    {\r\n      \"pid\": 12335,\r\n      \"memory\": 39047168,\r\n      \"cpu\": 0\r\n    },\r\n    {\r\n      \"pid\": 12337,\r\n      \"memory\": 42954752,\r\n      \"cpu\": 0\r\n    }\r\n  ],\r\n  \"osStats\": {\r\n    \"totalMem\": 4009091072,\r\n    \"freeMem\": 1395204096,\r\n    \"cpus\": [\r\n      {\r\n        \"model\": \"Intel(R) Xeon(R) CPU E5-2670 0 @ 2.60GHz\",\r\n        \"speed\": 2599,\r\n        \"times\": {\r\n          \"user\": 125852300,\r\n          \"nice\": 334700,\r\n          \"sys\": 59101600,\r\n          \"idle\": 108351690500,\r\n          \"irq\": 54764100\r\n        }\r\n      },\r\n      {\r\n        \"model\": \"Intel(R) Xeon(R) CPU E5-2670 0 @ 2.60GHz\",\r\n        \"speed\": 2599,\r\n        \"times\": {\r\n          \"user\": 57877800,\r\n          \"nice\": 343100,\r\n          \"sys\": 31694400,\r\n          \"idle\": 108823011800,\r\n          \"irq\": 0\r\n        }\r\n      }\r\n    ],\r\n    \"loadAvg\": [\r\n      0,\r\n      0,\r\n      0\r\n    ],\r\n    \"uptime\": 10986836.192939406,\r\n    \"platform\": \"linux\"\r\n  }\r\n}\r\n```\r\n### Status\r\nIt gets the status of all worker processes\r\n\r\n[http://localhost:5667/status](http://localhost:5667/status)\r\n\r\n#### Sample result\r\n```js\r\n{\r\n  \"1\": {\r\n    \"workerID\": 1,\r\n    \"uniqueID\": 1,\r\n    \"process\": 12335,\r\n    \"status\": \"ONLINE\"\r\n  },\r\n  \"2\": {\r\n    \"workerID\": 2,\r\n    \"uniqueID\": 2,\r\n    \"process\": 12337,\r\n    \"status\": \"ONLINE\"\r\n  }\r\n}\r\n```\r\n## License\r\n\r\n[The MIT License](http://opensource.org/licenses/MIT)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}